swagger: "2.0"
info:
  version: "0.0.1"
  title: Game Collector App
# during dev, should point to your local machine
#host: localhost:10010
host: localhost

x-google-endpoints:
- name: 'total-name-256003.appspot.com'
  allowCors: 'true'
# basePath prefixes all resource paths
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:

  /alumnos:
    x-swagger-router-controller: alumnos.controller

    get:
      description: get the alumnos list
      parameters:
        - name: nombre
          in: query
          type: string
          required: false
        - name: apellidoPaterno
          in: query
          type: string
          required: false
        - name: apellidoMaterno
          in: query
          type: string
          required: false
      operationId: getAlumnos
      responses: 
        "200":
          description: success
          schema: 
            $ref: "#/definitions/GetAlumnosListResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    post:
      description: Add a new alumno to the list
      parameters:
        - in: body
          name: alumno
          description: The alumno to create
          schema:
            $ref: "#/definitions/Alumno"
      operationId: createAlumno
      responses: 
        "201":
          description: success
          schema:
            $ref: "#/definitions/GetAlumnoResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
  
  /alumnos/{id}:
    x-swagger-router-controller: alumnos.controller
    
    get: 
      description: Get a alumno
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getAlumnoById
      responses:
        "200":
          description: success
          schema:
           $ref: "#/definitions/GetAlumnoResponse"
        default:
          description: Error
          schema: 
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: Update a alumno
      parameters:
        - name: id
          description: Alumno id
          type: string
          in: path
          required: true
        - in: body
          name: alumno
          description: The alumno to update
          schema:
            $ref: "#/definitions/Alumno"
      operationId: updateAlumno
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAlumnoResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
    delete:
      description: Delete a alumno
      parameters:
        - name: id
          description: Alumno id
          type: string
          in: path 
          required: true
      operationId: deleteAlumno
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /videogames:
    x-swagger-router-controller: game.controller
    get:
      description: get the game list
      parameters:
        - name: name
          in: query
          type: string
          required: false
        - name: developer
          in: query
          type: string
          required: false
        - name: gamesystem
          in: query
          type: string
          required: false
        - name: genre
          in: query
          type: string
          required: false
        - name: year
          in: query
          type: number
          required: false
        - name: sort
          in: query
          type: string
          required: false
        - name: fields
          in: query  
          type: string
          required: false
      operationId: getGames
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetVideoGameListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new game system to the list
      parameters:
        - in: body
          name: videogame
          description: The videogame to create.
          schema:
            $ref: "#/definitions/VideoGame"
      operationId: createGame
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /videogames/{id}:
    x-swagger-router-controller: game.controller
    
    get:
      description: get a videogmae
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getGameById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
    put:
      description: update a video game
      parameters:
        - name: id
          description: videogame id
          type: string
          in: path
          required: true
        - in: body
          name: videogame
          description: The videogame to update.
          schema:
            $ref: "#/definitions/VideoGame"
      operationId: updateGame
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetVideoGameResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
            
    delete:
      description: delete a videogame
      parameters:
        - name: id
          description: videogame id
          type: string
          in: path
          required: true
      operationId: deleteGame
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /pokemons:
    x-swagger-router-controller: pokemon.controller
    get:
      description: get the pokemon list
      parameters:
        - name: name
          in: query
          type: string
          required: false
        - name: des
          in: query
          type: string
          required: false
        - name: imageLink
          in: query
          type: string
          required: false
        - name: power
          in: query
          type: number
          required: false
        - name: locationLat
          in: query
          type: string
          required: false
        - name: locatonLong
          in: query
          type: string
          required: false
        - name: isCatch
          in: query
          type: boolean
          required: false
        - name: sort
          in: query
          type: string
          required: false
        - name: fields
          in: query  
          type: string
          required: false          
      operationId: getPokemons
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPokemonListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new pokemon to the list
      parameters:
        - in: body
          name: pokemon
          description: The pokemon to create.
          schema:
            $ref: "#/definitions/Pokemon"
      operationId: createPokemon
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GetPokemonResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /pokemons/{id}:
    x-swagger-router-controller: pokemon.controller

    get:
      description: get a pokemon
      parameters:
        - name: id
          type: string
          in: path
          required: true
      operationId: getPokemonById
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPokemonResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      description: update a pokemon
      parameters:
        - name: id
          description: pokemon id
          type: string
          in: path
          required: true
        - in: body
          name: pokemon
          description: The pokemon to update.
          schema:
            $ref: "#/definitions/Pokemon"
      operationId: updatePokemon
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPokemonResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      description: delete a pokemon
      parameters:
        - name: id
          description: pokemon id
          type: string
          in: path
          required: true
      operationId: deletePokemon
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /login/{role}:
    x-swagger-router-controller: main-controller
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  /unprotected:
    x-swagger-router-controller: main-controller
    get:
      operationId: unprotectedGet
      description: "Unprotected endpoint"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"

  /protected:
    x-swagger-router-controller: main-controller
    get:
      operationId: protectedGet
      description: "Protected endpoint, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /protected2:
    x-swagger-router-controller: main-controller
    get:
      operationId: protected2Get
      description: "Protected endpoint, only accessible to 'admins'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

            


    
  /swagger:
    x-swagger-pipe: swagger_raw
    
# complex objects have schema definitions
definitions:

  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string


  VideoGame:
    type: object
    properties:
      name:
        type: string
        description: Name of the game
      developer:
        type: string
        description: Developer/Publisher of the game
      gamesystem:
        type: string
        description: Name of the game system
      genre:
        type: string
        description: Name of the genre/style of the game
      year:
        type: number
        description: Release year
      image:
        type: string
        format: byte
    required:
      - name
      - developer
      - gamesystem
      - genre
      - year

  Pokemon:
    type: object
    properties:
      name:
        type: string
        description: Name of the pokemon
      des:
        type: string
        description: Description of the pokemon
      imageLink:
        type: string
        description: Link of the image pokemon
      power:
        type: number
        description: Power of the pokemon
      locationLat:
        type: string
        description: Latitude of the pokemon
      locationLong:
        type: string
        description: Longitude of the pokemon
      isCatch:
        type: boolean
        description: Pokemon is catch or not
    required:
      - name
      - des
      - imageLink
      - power
      - locationLong
      - locationLat
      - isCatch
      
  GetVideoGameResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      name:
        type: string
        description: Name of the game
      developer:
        type: string
        description: Developer of the game
      gamesystem:
        type: string
        description: Name of the game system
      genre:
        type: string
        description: Name of the genre of the game
      year:
        type: number
        description: Release year
      image:
        type: string
        format: byte
    required:
      - id
      - name
      - developer
      - gamesystem
      - genre
      - year
      
  GetPokemonResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      name:
        type: string
        description: Name of the pokemon
      des:
        type: string
        description: Description of the pokemon
      imageLink:
        type: string
        description: URL of the pokemon image
      power:
        type: number
        description: Power of the pokemon
      locationLat:
        type: string
        description: Latitude of the pokemon
      locationLong:
        type: string
        description: Longitude of the pokemon
      isCatch:
        type: boolean
        description: Pokemon is catch or not
    required:
      - name
      - des
      - imageLink
      - power
      - locationLat
      - locationLong
      - isCatch
      
  GetVideoGameListResponse:
    required:
      - videogames
    properties:
      videogames:
        type: array
        items:
          $ref: "#/definitions/GetVideoGameResponse" 
          
  GetPokemonListResponse:
    required:
      - pokemons
    properties:
      pokemons:
        type: array
        items:
          $ref: "#/definitions/GetPokemonResponse"
  
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: Returns 1 if successful
      description:
        type: string
        description: A short comment
    required:
      - success
      - description
  
  Alumno:
    type: object
    properties:
      nombre:
        type: string
        description: Nombre del alumno
      apellidoPaterno:
        type: string
        description: Apellido paterno del alumno
      apellidoMaterno:
        type: string
        description: Apellido materno del alumno
    required:
      - nombre
      - apellidoPaterno
      - apellidoMaterno
    
  GetAlumnoResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      nombre:
        type: string
        description: Nombre del alumno
      apellidPaterno:
        type: string
        description: Apellido paterno del alumno
      apellidoMaterno:
        type: string
        description: Apellido materno del alumno
      
  GetAlumnosListResponse:
    required: 
      - alumnos
    properties: 
      alumnos:
        type: array
        items:
          $ref: "#/definitions/GetAlumnosListResponse"
          
  ErrorResponse:
    required:
      - message
    properties:
      code:
        type: number
      message:
        type: string
      description:
        type: string
